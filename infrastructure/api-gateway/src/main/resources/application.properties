# Server Configuration
server.port=8080

# Spring Application Name
spring.application.name=api-gateway

# Eureka Client Configuration (for service discovery)
# This gateway will register itself with Eureka to find other services
eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka}
eureka.instance.prefer-ip-address=true

# Spring Cloud Gateway Route Configuration
# We use the 'lb' (load balancer) protocol to let Eureka resolve the service location
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# --- Route Definitions ---

# Route for User Service Authentication (e.g., /api/auth/login)
# Requests to http://localhost:8080/user-service/api/auth/** will be forwarded to the user-service
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/user-service/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# Add more routes here as we build more services
# Example for a future expense-service
# spring.cloud.gateway.routes[1].id=expense-service
# spring.cloud.gateway.routes[1].uri=lb://expense-service
# spring.cloud.gateway.routes[1].predicates[0]=Path=/api/expenses/**
